version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs:
  build:
    docker:
      - image: circleci/ruby:3.0.0
        environment:
          - BUNDLER_VERSION: 2.2.11
          - RAILS_ENV: 'test'
      - image: circleci/mysql:8.0
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'
        command: --default-authentication-plugin=mysql_native_password

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler -v 2.2.11
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: mv config/database.yml.ci config/database.yml 
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      
      # rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop -a

      # rspec
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    machine:
      enabled: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 37:c0:d0:8a:6c:c9:4d:88:b7:a7:cb:50:cd:ff:db:c2
      - deploy:
          name: Capistrano deploy
          command: |
            pwd
            ls -al
            bundle exec cap production deploy

workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
